<!-- Launch the OpenNI device driver -->
<launch> 
         
  <arg name="manager_name" />
  <arg name="calib_path"   /> 
  <arg name="publish_cloud" />
  <arg name="scale" />
  <arg name="unwarp" />
  <arg name="verbose" /> 
  
  <!-- Debayered images -->
  <node pkg="nodelet" type="nodelet" name="debayer"
        args="load image_proc/debayer $(arg manager_name)">    
    <remap from="image_raw"   to="/camera/rgb/image_raw"/>
    <remap from="image_color" to="/camera/rgb/image_color"/>
  </node>

  <node pkg="nodelet" type="nodelet" name="rgbd_image_proc"
        args="load ccny_rgbd/RGBDImageProcNodelet $(arg manager_name)"
        output="log">
    
    <!-- Resample by a factor of 2-->
    <param name="scale" value="$(arg scale)"/>
    <param name="unwarp" value="$(arg unwarp)"/>
    <param name="publish_cloud" value="$(arg publish_cloud)"/>
    <param name="calib_path" value="$(arg calib_path)"/>
    <param name="verbose" value="$(arg verbose)"/>

  </node> 

  <!-- static transforms -->
  <arg name="pi/2" value="1.5707963267948966" />
  <arg name="optical_rotate" value="0 0 0 -$(arg pi/2) 0 -$(arg pi/2)" />
        
  <node pkg="tf" type="static_transform_publisher" name="camera_rgb_frame_tf"
        args="0 -0.045 0 0 0 0  /camera_link /camera_rgb_frame 40" />        

  <node pkg="tf" type="static_transform_publisher" name="camera_rgb_optical_frame_tf"
        args="$(arg optical_rotate) /camera_rgb_frame /camera_rgb_optical_frame 40" />  

</launch>
