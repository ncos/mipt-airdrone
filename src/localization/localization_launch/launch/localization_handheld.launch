<launch>
  <!-- Start kinect driver -->
  <include file="$(find freenect_launch)/launch/freenect.launch"></include>

  <!-- Necessary tf transforms -->
  <node pkg="tf" type="static_transform_publisher" name="base_link2camera_link" args="0 0 0 0 0 0 base_link camera_link 30" />
  <node pkg="tf" type="static_transform_publisher" name="base_link2imu_link" args="0 0 0 -2.0 0 0 base_link imu_link 50" />
  <node pkg="tf_manager" type="tf_manager_nd"      name="airdrone_tf_manager"/>



  <arg name="input_depth_image_raw_topic"   default="/camera/depth/image_raw"/>
  <arg name="input_depth_camera_info_topic" default="/camera/depth/camera_info"/>
  <arg name="input_rgb_image_raw_topic"     default="/camera/rgb/image_raw"/>
  <arg name="input_rgb_camera_info_topic"   default="/camera/rgb/camera_info"/>

  <!-- Start kinect depth frame converter to convert depth image from int millimetres to double metres -->
  <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager" output="screen"/>
  <node pkg="nodelet" type="nodelet" name="debayer" args="load image_proc/debayer nodelet_manager">    
    <remap from="image_raw"        to="$(arg input_rgb_image_raw_topic)"/>
    <remap from="camera_info"      to="$(arg input_rgb_camera_info_topic)"/>
    <remap from="image_mono"       to="/debayer/kinect/rgb/image_mono"/>
    <remap from="image_rect"       to="/debayer/kinect/rgb/image_rect"/>
    <remap from="image_color"      to="/debayer/kinect/rgb/image_color"/>
    <remap from="image_rect_color" to="/debayer/kinect/rgb/image_rect_color"/>
  </node>
  <node pkg="nodelet" type="nodelet" name="rgbd_image_proc" args="load ccny_rgbd/RGBDImageProcNodelet nodelet_manager" output="log">
    <remap from="/camera/rgb/image_color"   to="/debayer/kinect/rgb/image_color"/>
    <remap from="/camera/depth/image_raw"   to="$(arg input_depth_image_raw_topic)"/>
    <remap from="/camera/rgb/camera_info"   to="$(arg input_rgb_camera_info_topic)"/>
    <remap from="/camera/depth/camera_info" to="$(arg input_depth_camera_info_topic)"/>
    <remap from="/rgbd/rgb"                 to="/rgbd_calibrated/rgb"/>
    <remap from="/rgbd/depth"               to="/rgbd_calibrated/depth"/>
    <remap from="/rgbd/info"                to="/rgbd_calibrated/info"/>
    <remap from="/rgbd/cloud"               to="/rgbd_calibrated/cloud"/>
    <param name="scale"         value="1.0"/>
    <param name="unwarp"        value="false"/>
    <param name="publish_cloud" value="false"/>
    <param name="calib_path"    value="$(find ccny_rgbd_data)/calibration_openni_default"/>
    <param name="verbose"       value="false"/>
  </node>



  <!--include file="$(find roscopter)/launch/roscopter.launch"></include-->


  <!-- Visual odometry -->
  <include file="$(find ccny_launch)/launch/ccny_rgbd.launch">
    <arg name="camera_depth_topic" value="/rgbd_calibrated/depth"/>
    <arg name="camera_rgb_topic"   value="/rgbd_calibrated/rgb"/>
    <arg name="camera_info_topic"  value="/rgbd_calibrated/info"/>
  </include>

  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <param name="output_frame"   value="odom"/>
    <param name="freq"           value="30.0"/>
    <param name="sensor_timeout" value="0.3"/>
    <param name="publish_tf"     value="false" />
    <param name="odom_used"      value="false"/>
    <param name="imu_used"       value="false"/>
    <param name="vo_used"        value="true"/>
    <param name="debug"          value="false"/>
    <param name="self_diagnose"  value="false"/>
    <remap from="/vo"       to="/ekf_vo" />
    <remap from="/imu_data" to="/apm/imu" />
  </node>


  <!-- Start rviz visualization with preset config -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find ccny_launch)/launch/ccny_rgbd-demo.rviz"/>

</launch>
